

-- a)
CREATE TABLE PELICULA
  (
    ID_PELICULA INTEGER,
    TITULO      VARCHAR2(120),
    SINOPSIS    VARCHAR2(320),
    CONSTRAINT PK_ID_PELICULA PRIMARY KEY (ID_PELICULA)
  );
-- b)
CREATE TABLE SALA
  (
    ID_SALA         INTEGER,
    ID_PELICULA     INTEGER,
    NUMERO_ASIENTOS INTEGER,
    CONSTRAINT PK_ID_SALA PRIMARY KEY (ID_SALA),
    CONSTRAINT FK1_ID_PELICULA FOREIGN KEY (ID_PELICULA) REFERENCES PELICULA(ID_PELICULA)
  );
-- c)
CREATE SEQUENCE SEC_PELICULA START WITH 1 INCREMENT BY 1 NOMAXVALUE;
CREATE SEQUENCE SEC_SALA START WITH 1 INCREMENT BY 1 NOMAXVALUE;
-- d)
CREATE OR REPLACE PROCEDURE GUARDAR_PELICULA
  (
    MY_ID_PELICULA OUT INTEGER,
    MY_TITULO   IN VARCHAR2,
    MY_SINOPSIS IN VARCHAR2
  )
AS
BEGIN
  SELECT SEC_PELICULA.NEXTVAL INTO MY_ID_PELICULA FROM DUAL;
  INSERT
  INTO PELICULA
    (
      ID_PELICULA,
      TITULO,
      SINOPSIS
    )
    VALUES
    (
    MY_ID_PELICULA,
    MY_TITULO,
    MY_SINOPSIS
    );
END;
/
-- e)
SET SERVEROUTPUT ON;
DECLARE
  VALOR INTEGER;
BEGIN
  GUARDAR_PELICULA(VALOR, 'The Kings Speech','csdfsds');
  DBMS_OUTPUT.PUT_LINE('PELICULA GUARDADA '||VALOR);
END;
/
----------------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  VALOR INTEGER;
BEGIN
  GUARDAR_PELICULA(VALOR, 'Rocky','csdfsds');
  DBMS_OUTPUT.PUT_LINE('PELICULA GUARDADA '||VALOR);
END;
/
---------------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  VALOR INTEGER;
BEGIN
  GUARDAR_PELICULA(VALOR, 'The Great Gatsby ','csdfsds');
  DBMS_OUTPUT.PUT_LINE('PELICULA GUARDADA '||VALOR);
END;
/
-- f)
CREATE OR REPLACE PROCEDURE AGREGAR_SALA
  (
    MY_ID_SALA OUT INTEGER,
    MY_ID_PELICULA IN INTEGER,
    MY_NUMERO_ASIENTOS IN INTEGER
  )
AS
BEGIN
  SELECT SEC_SALA.NEXTVAL INTO MY_ID_SALA FROM DUAL;
  INSERT
  INTO SALA
    (
   ID_SALA,
   ID_PELICULA,
   NUMERO_ASIENTOS
    )
    VALUES
    (
    MY_ID_SALA,
    MY_ID_PELICULA,
    MY_NUMERO_ASIENTOS
  );
END;
/
-- G)
SET SERVEROUTPUT ON;
DECLARE
  VALOR1 INTEGER;
BEGIN
  AGREGAR_SALA(VALOR1, 3,10);
  DBMS_OUTPUT.PUT_LINE('SALA GUARDADA '||VALOR1);
END;
/
----------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  VALOR1 INTEGER;
BEGIN
  AGREGAR_SALA(VALOR1, 2,10);
  DBMS_OUTPUT.PUT_LINE('SALA GUARDADA '||VALOR1);
END;
/
----------------------------------------------------------
SET SERVEROUTPUT ON;
DECLARE
  VALOR1 INTEGER;
BEGIN
  AGREGAR_SALA(VALOR1, 1,10);
  DBMS_OUTPUT.PUT_LINE('SALA GUARDADA '||VALOR1);
END;
/
-- h)

CREATE OR REPLACE PROCEDURE COMPARAR_BOLETOS
  (
    MY_ID_PELICULA IN INTEGER,
    MY_ID_SALA IN INTEGER,
    MY_NUMERO_BOLETOS IN INTEGER
  )
AS
MNB INTEGER;
BEGIN
SELECT NUMERO_ASIENTOS INTO MNB FROM SALA WHERE ID_SALA = MY_ID_SALA AND ID_PELICULA = MY_ID_PELICULA;
MNB := MNB - MY_NUMERO_BOLETOS;
IF MNB >= 0 THEN
UPDATE SALA SET NUMERO_ASIENTOS = MNB WHERE ID_SALA = MY_ID_SALA AND ID_PELICULA = MY_ID_PELICULA;
ELSE
RAISE_APPLICATION_ERROR(-20001,'ASIENTOS AGOTADOS');
END IF;
END;
/
--------------------------------------------------------------
SET SERVEROUTPUT ON;

BEGIN
COMPARAR_BOLETOS(1,5,6);
DBMS_OUTPUT.PUT_LINE('Compra exitosa');
END;
/
